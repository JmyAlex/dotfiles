#!/bin/bash

#--------------------------------------------------------------------

NCPU=$(grep -c 'processor' /proc/cpuinfo)    # Number of CPUs
SLOAD=$(( 100*${NCPU} ))        # Small load
MLOAD=$(( 200*${NCPU} ))        # Medium load
XLOAD=$(( 400*${NCPU} ))        # Xlarge load

# Returns system load as percentage, i.e., '40' rather than '0.40)'.
function load()
{
    local SYSLOAD=$(cut -d " " -f1 /proc/loadavg | tr -d '.')
    # System load of the current host.
    echo $((10#$SYSLOAD))       # Convert to decimal.
}

# Returns a color indicating system load.
function load_color()
{
    local SYSLOAD=$(load)
    if [ ${SYSLOAD} -gt ${XLOAD} ]; then
        echo -en ${ALERT}
    elif [ ${SYSLOAD} -gt ${MLOAD} ]; then
        echo -en ${Red}
    elif [ ${SYSLOAD} -gt ${SLOAD} ]; then
        echo -en ${BRed}
    else
        echo -en ${Green}
    fi
}

# Returns a color according to running/suspended jobs.
function job_color()
{
    if [ $(jobs -s | wc -l) -gt "0" ]; then
        echo -en ${BRed}
    elif [ $(jobs -r | wc -l) -gt "0" ] ; then
        echo -en ${BCyan}
    fi
}

function jobs_show()
{
	njobs=$(jobs | wc -l)
	echo $njobs
}

function load_show()
{
	local SYSLOAD=$(cut -d " " --fields=1,2,3 /proc/loadavg)
	echo $SYSLOAD
}

#--------------------------------------------------------------------

color() { "$@" 2>&1>&3|sed 's,.*,\x1B[1;31m&\x1B[0m,'>&2; return $?; } 3>&1

generate_tags()
{
	find -name '*.[hc]' -exec ctags '{}' + ; find -name '*.[hc]' -exec cscope -b '{}' +
}

#--------------------------------------------------------------------

#_cd() {
    #pushd "$@" > /dev/null
#}

#cd() {
    #if [ -z "$1" ] ; then
        #_cd "$HOME"
    #elif [ -f "$1" ] ; then
        #_cd "$(dirname "$1")"
    #else
        #_cd "$1"
    #fi
#}

dud() {
    du -h -d 1 "$@" | sort -h
}

dua() {
    du -ha "$@" | sort -h
}
