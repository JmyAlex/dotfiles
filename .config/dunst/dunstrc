[global]
    font = SF Pro Text 11
    markup = full

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    # Markup is allowed
    #format = "<i>%s</i>\n%b"
    format = "<b><span foreground='#e06c75'>%s</span></b>\n%b"
    #format = "<span color="#e35b5b"><b><big>%s</big></b></span>\n<i><small>%b</small></i>"

    # Sort messages by urgency.
    sort = yes

    # Show how many messages are currently hidden (because of geometry).
    indicate_hidden = yes

    # Alignment of message text.
    # Possible values are "left", "center" and "right".
    alignment = center

    # Align icons left/right/off
    icon_position = left

    max_icon_size = 90

    # Paths to default icons.
    icon_path = /usr/share/icons/Papirus/48x48/status/:/usr/share/icons/Papirus/64x64/devices/:/usr/share/icons/Papirus/48x48/apps

    # The frequency with wich text that is longer than the notification
    # window allows bounces back and forth.
    # This option conflicts with 'word_wrap'.
    # Set to 0 to disable
    bounce_freq = 0

    # show age of message if message is older than show_age_threshold seconds.
    # set to -1 to disable
    show_age_threshold = 60

    # split notifications into multiple lines if they don't fit into geometry
    word_wrap = yes

    # ignore newlines '\n' in notifications
    ignore_newline = no

    # the geometry of the window
    # geometry [{width}]x{height}][+/-{x}+/-{y}]
    # The geometry of the message window.
    # The height is measured in number of notifications everything else in pixels. If the width
    # is omitted but the height is given ("-geometry x2"), the message window
    # expands over the whole screen (dmenu-like). If width is 0,
    # the window expands to the longest message displayed.
    # A positive x is measured from the left, a negative from the
    # right side of the screen.  Y is measured from the top and down respectevly.
    # The width can be negative. In this case the actual width is the
    # screen width minus the width defined in within the geometry option.
    geometry = "300x50-5+35"
    # The transparency of the window. range: [0; 100]
    # This option will only work if a compositing windowmanager is present (e.g. xcompmgr, compiz, etc..)
    transparency = 0

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # for longer than idle_threshold seconds.
    # Set to 0 to disable.
    idle_threshold = 120

    # Which monitor should the notifications be displayed on.
    monitor = HDMI-1

    # Display notification on focused monitor. Possible modes are:
    # mouse: follow mouse pointer
    # keyboard: follow window with keyboard focus
    # none: don't follow anything
    #
    # "keyboard" needs a windowmanager that exports the _NET_ACTIVE_WINDOW property.
    # This should be the case for almost all modern windowmanagers.
    #
    # If this option is set to mouse or keyboard, the monitor option will be
    # ignored.
    follow = keyboard

    # should a notification popped up from history be sticky or
    # timeout as if it would normally do.
    sticky_history = yes

    # The height of a single line. If the height is smaller than the font height,
    # it will get raised to the font height.
    # This adds empty space above and under the text.
    line_height = 1

    # Draw a line of 'separatpr_height' pixel height between two notifications.
    # Set to 0 to disable
    separator_height = 1

    # padding between text and separator>
    padding = 8

    # horizontal padding
    horizontal_padding = 8

    # Define a color for the separator.
    # possible values are:
    #  * auto: dunst tries to find a color fitting to the background
    #  * foreground: use the same color as the foreground
    #  * frame: use the same color as the frame.
    # * anything else will be interpreted as a X color
    separator_color = frame

    # print a notification on startup
    # This is mainly for error detection, since dbus (re-)starts dunst
    # automatically after a crash.
    startup_notification = false

    # browser for opening urls in context menu
    browser = /usr/bin/firefox -new-tab

[frame]
    width = 1
    color = "#61afef"

[shortcuts]
    close = ctrl+space
    close_all = ctrl+shift+space
    history = ctrl+grave
    context = ctrl+shift+period

[urgency_low]
    background = "#282c34"
    foreground = "#98c379"
    timeout = 5

[urgency_normal]
    background = "#282c34"
    foreground = "#61afef"
    timeout = 10

[urgency_critical]
    background = "#282c34"
    foreground = "#e06c75"
    timeout = 0

# vim: ft=cfg
