# act like GNU screen
unbind C-b
set -g prefix C-a

# send the prefix to client inside window (ala nested sessions)
bind-key a send-prefix

set-window-option -g xterm-keys on

# Relax!
set -sg escape-time 0
set -sg repeat-time 600

set -g default-terminal "xterm-256color"
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set-option -ga terminal-overrides ",xterm-256color:Tc"

# toggle last window like screen
bind-key C-b last-window

# confirm before killing a window or the server
bind-key k confirm kill-window
bind-key K confirm kill-server

# vi-style controls in copy mode
set-option -g status-keys vi
setw -g mode-keys vi

# copy - paste
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -Tcopy-mode-vi H send -X start-of-line
bind -Tcopy-mode-vi L send -X end-of-line
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

# more intuitive keybindings for splitting
unbind %
bind H split-window -h -c "#{pane_current_path}"
unbind '"'
bind V split-window -v -c "#{pane_current_path}"

# toggle last window like screen
bind-key C-b last-window

# scrollback buffer n lines
set -g history-limit 50000

# open a man page in new window
bind / command-prompt "split-window 'exec man %%'"

# # quick view of processes
bind '~' split-window "exec htop"

bind S new-window -n snippet \; send-keys "fzf_snippet && tmux kill-window\n"

source $HOME/.tmux_airline

# Mouse stuff
set-option -g -q mouse on

# Mouse scrolling before 2.1 ?
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
bind-key -Tcopy-mode-vi WheelUpPane send -X halfpage-up
bind-key -Tcopy-mode-vi WheelDownPane send -X halfpage-down

bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -Tcopy-mode-vi PPage send -X page-up
bind-key -Tcopy-mode-vi NPage send -X page-down

# Activity
setw -g monitor-activity on
set -g visual-activity on

# Pane movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Autorename sanely.
setw -g automatic-rename on

setw -g alternate-screen on

set -g renumber-windows on

# move x clipboard into tmux paste buffer
#bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
#bind C-y run "tmux show-buffer | xclip -i"

#Copy tmux paste buffer to CLIPBOARD
#bind C-c run "tmux save-buffer - | xclip -i -selection clipboard"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
#bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

set -g set-titles on
set -g set-titles-string '#S.#I.#P #W #T' # session.windowindex.paneindex windowname windowtitle

# Reload tmux.conf
bind r source-file ~/.tmux.conf \; display "Reloaded .tmux.conf"

# Start numbering at 1 (easier to switch between a few screens)
set -g base-index 1
setw -g pane-base-index 1

# Layouts
set -g main-pane-width 260
bind M select-layout main-vertical
bind E select-layout even-horizontal

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

#Tmux Plugin Manager
# List of plugins
# Supports `github_username/repo` or full git URLs
set -g @tpm_plugins "               \
    tmux-plugins/tpm                \
    tmux-plugins/tmux-copycat       \
    tmux-plugins/tmux-yank          \
    tmux-plugins/tmux-open          \
    tmux-plugins/tmux-logging       \
    tmux-plugins/tmux-resurrect     \
    Morantron/tmux-fingers          \
    "
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# initializes TMUX plugin manager
run-shell ~/.tmux/plugins/tpm/tpm

